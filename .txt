-- Services
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Camera = workspace.CurrentCamera

-- GUI Setup
local player = Players.LocalPlayer
local gui = Instance.new("ScreenGui")
gui.Name = "ExecutorGUI"
gui.ResetOnSpawn = false
gui.Parent = player:WaitForChild("PlayerGui")

-- Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 400, 0, 300)
mainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BorderSizePixel = 0
mainFrame.Visible = false
mainFrame.Parent = gui

-- Title Bar
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 30)
titleBar.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
titleBar.BorderSizePixel = 0
titleBar.Parent = mainFrame

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, 0, 1, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Executor GUI - Press Q to Toggle"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextSize = 14
titleLabel.Font = Enum.Font.SourceSans
titleLabel.Parent = titleBar

-- Tab Buttons
local tabFrame = Instance.new("Frame")
tabFrame.Size = UDim2.new(1, 0, 0, 30)
tabFrame.Position = UDim2.new(0, 0, 0, 30)
tabFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
tabFrame.BorderSizePixel = 0
tabFrame.Parent = mainFrame

local aimbotTabButton = Instance.new("TextButton")
aimbotTabButton.Size = UDim2.new(0, 133, 1, 0)
aimbotTabButton.Position = UDim2.new(0, 0, 0, 0)
aimbotTabButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
aimbotTabButton.Text = "AIMBOT"
aimbotTabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
aimbotTabButton.TextSize = 14
aimbotTabButton.Font = Enum.Font.SourceSans
aimbotTabButton.Parent = tabFrame

local visualsTabButton = Instance.new("TextButton")
visualsTabButton.Size = UDim2.new(0, 133, 1, 0)
visualsTabButton.Position = UDim2.new(0, 133, 0, 0)
visualsTabButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
visualsTabButton.Text = "VISUALS"
visualsTabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
visualsTabButton.TextSize = 14
visualsTabButton.Font = Enum.Font.SourceSans
visualsTabButton.Parent = tabFrame

local exploitsTabButton = Instance.new("TextButton")
exploitsTabButton.Size = UDim2.new(0, 134, 1, 0)
exploitsTabButton.Position = UDim2.new(0, 266, 0, 0)
exploitsTabButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
exploitsTabButton.Text = "EXPLOITS"
exploitsTabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
exploitsTabButton.TextSize = 14
exploitsTabButton.Font = Enum.Font.SourceSans
exploitsTabButton.Parent = tabFrame

-- Tab Content Frames
local aimbotFrame = Instance.new("Frame")
aimbotFrame.Size = UDim2.new(1, 0, 1, -60)
aimbotFrame.Position = UDim2.new(0, 0, 0, 60)
aimbotFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
aimbotFrame.BorderSizePixel = 0
aimbotFrame.Visible = true
aimbotFrame.Parent = mainFrame

local visualsFrame = Instance.new("Frame")
visualsFrame.Size = UDim2.new(1, 0, 1, -60)
visualsFrame.Position = UDim2.new(0, 0, 0, 60)
visualsFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
visualsFrame.BorderSizePixel = 0
visualsFrame.Visible = false
visualsFrame.Parent = mainFrame

local exploitsFrame = Instance.new("Frame")
exploitsFrame.Size = UDim2.new(1, 0, 1, -60)
exploitsFrame.Position = UDim2.new(0, 0, 0, 60)
exploitsFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
exploitsFrame.BorderSizePixel = 0
exploitsFrame.Visible = false
exploitsFrame.Parent = mainFrame

-- Tab Switching Logic
aimbotTabButton.MouseButton1Click:Connect(function()
    aimbotFrame.Visible = true
    visualsFrame.Visible = false
    exploitsFrame.Visible = false
end)

visualsTabButton.MouseButton1Click:Connect(function()
    aimbotFrame.Visible = false
    visualsFrame.Visible = true
    exploitsFrame.Visible = false
end)

exploitsTabButton.MouseButton1Click:Connect(function()
    aimbotFrame.Visible = false
    visualsFrame.Visible = false
    exploitsFrame.Visible = true
end)

-- Aimbot Script Implementation
local targetPlayer = nil
local aimbotEnabled = false

local function getNearestPlayer()
    local nearestDistance = math.huge
    local nearestPlayer = nil

    for _, otherPlayer in pairs(Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (player.Character.HumanoidRootPart.Position - otherPlayer.Character.HumanoidRootPart.Position).Magnitude
            if distance < nearestDistance then
                nearestDistance = distance
                nearestPlayer = otherPlayer
            end
        end
    end

    return nearestPlayer
end

local aimbotConnection
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if aimbotEnabled and input.UserInputType == Enum.UserInputType.MouseButton2 then
        targetPlayer = getNearestPlayer()
        if targetPlayer then
            aimbotConnection = RunService:BindToRenderStep("LockOnPlayer", Enum.RenderPriority.Camera.Value + 1, function()
                Camera.CFrame = CFrame.new(Camera.CFrame.Position, targetPlayer.Character.HumanoidRootPart.Position)
            end)
        end
    end
end)

UserInputService.InputEnded:Connect(function(input, gameProcessed)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        if aimbotConnection then
            RunService:UnbindFromRenderStep("LockOnPlayer")
            aimbotConnection = nil
        end
    end
end)

-- Aimbot Toggle
local aimbotToggle = Instance.new("TextButton")
aimbotToggle.Size = UDim2.new(0, 200, 0, 30)
aimbotToggle.Position = UDim2.new(0, 10, 0, 10)
aimbotToggle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
aimbotToggle.Text = "Aimbot: OFF"
aimbotToggle.TextColor3 = Color3.fromRGB(255, 0, 0)
aimbotToggle.TextSize = 14
aimbotToggle.Font = Enum.Font.SourceSans
aimbotToggle.Parent = aimbotFrame

aimbotToggle.MouseButton1Click:Connect(function()
    aimbotEnabled = not aimbotEnabled
    if aimbotEnabled then
        aimbotToggle.Text = "Aimbot: ON"
        aimbotToggle.TextColor3 = Color3.fromRGB(0, 255, 0)
    else
        aimbotToggle.Text = "Aimbot: OFF"
        aimbotToggle.TextColor3 = Color3.fromRGB(255, 0, 0)
        if aimbotConnection then
            RunService:UnbindFromRenderStep("LockOnPlayer")
            aimbotConnection = nil
        end
    end
end)

-- ESP Script Implementation
local espEnabled = {
    Box = false,
    Name = false,
    Distance = false,
    HealthBar = false,
    Tracer = false,
    Skeleton = false,
    TeamCheck = false
}

local espObjects = {}

local function DrawESP(plr)
    if espEnabled.TeamCheck and plr.Team == player.Team then return end

    local Box = Drawing.new("Quad")
    Box.Visible = false
    Box.Color = Color3.fromRGB(255, 255, 255)
    Box.Thickness = 1
    Box.Transparency = 1

    local name = Drawing.new("Text")
    name.Size = 18
    name.Color = Color3.fromRGB(255, 255, 255)
    name.Outline = true
    name.Visible = false

    local distance = Drawing.new("Text")
    distance.Size = 16
    distance.Color = Color3.fromRGB(255, 255, 255)
    distance.Outline = true
    distance.Visible = false

    local healthBar = Drawing.new("Line")
    healthBar.Thickness = 3
    healthBar.Visible = false

    local tracer = Drawing.new("Line")
    tracer.Color = Color3.fromRGB(0, 255, 0)
    tracer.Thickness = 1
    tracer.Visible = false

    local bones = {
        {"Head", "UpperTorso"}, {"UpperTorso", "LowerTorso"},
        {"LowerTorso", "LeftUpperLeg"}, {"LeftUpperLeg", "LeftLowerLeg"}, {"LeftLowerLeg", "LeftFoot"},
        {"LowerTorso", "RightUpperLeg"}, {"RightUpperLeg", "RightLowerLeg"}, {"RightLowerLeg", "RightFoot"},
        {"UpperTorso", "LeftUpperArm"}, {"LeftUpperArm", "LeftLowerArm"}, {"LeftLowerArm", "LeftHand"},
        {"UpperTorso", "RightUpperArm"}, {"RightUpperArm", "RightLowerArm"}, {"RightLowerArm", "RightHand"}
    }

    local skeleton = {}
    for _, pair in ipairs(bones) do
        local line = Drawing.new("Line")
        line.Color = Color3.fromRGB(255, 165, 0)
        line.Thickness = 2
        line.Visible = false
        skeleton[pair[1] .. pair[2]] = line
    end

    espObjects[plr] = {Box = Box, Name = name, Distance = distance, HealthBar = healthBar, Tracer = tracer, Skeleton = skeleton}

    local function Update()
        local c
        c = RunService.RenderStepped:Connect(function()
            if plr.Character and plr.Character.PrimaryPart and plr.Character:FindFirstChildOfClass("Humanoid").Health > 0 then
                local pos, vis = Camera:WorldToViewportPoint(plr.Character.PrimaryPart.Position)
                if vis then
                    local TopLeft = Camera:WorldToViewportPoint((plr.Character.PrimaryPart.CFrame * CFrame.new(-2, 3, 0)).p)
                    local TopRight = Camera:WorldToViewportPoint((plr.Character.PrimaryPart.CFrame * CFrame.new(2, 3, 0)).p)
                    local BottomLeft = Camera:WorldToViewportPoint((plr.Character.PrimaryPart.CFrame * CFrame.new(-2, -3, 0)).p)
                    local BottomRight = Camera:WorldToViewportPoint((plr.Character.PrimaryPart.CFrame * CFrame.new(2, -3, 0)).p)

                    if espEnabled.Box then
                        Box.PointA = Vector2.new(TopRight.X, TopRight.Y)
                        Box.PointB = Vector2.new(TopLeft.X, TopLeft.Y)
                        Box.PointC = Vector2.new(BottomLeft.X, BottomLeft.Y)
                        Box.PointD = Vector2.new(BottomRight.X, BottomRight.Y)
                        Box.Visible = true
                    else
                        Box.Visible = false
                    end

                    if espEnabled.Name then
                        name.Position = Vector2.new(TopRight.X, TopRight.Y - 20)
                        name.Text = plr.Name
                        name.Visible = true
                    else
                        name.Visible = false
                    end

                    if espEnabled.Distance then
                        local playerDistance = (player.Character.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).Magnitude
                        distance.Position = Vector2.new(BottomRight.X, BottomRight.Y + 5)
                        distance.Text = tostring(math.floor(playerDistance)) .. "m"
                        distance.Visible = true
                    else
                        distance.Visible = false
                    end

                    if espEnabled.HealthBar then
                        local humanoid = plr.Character:FindFirstChildOfClass("Humanoid")
                        if humanoid then
                            local healthPercent = humanoid.Health / humanoid.MaxHealth
                            healthBar.From = Vector2.new(BottomRight.X + 5, BottomRight.Y)
                            healthBar.To = Vector2.new(BottomRight.X + 5, TopRight.Y + ((BottomRight.Y - TopRight.Y) * (1 - healthPercent)))
                            healthBar.Color = Color3.fromRGB(0, 255, 0)
                            healthBar.Visible = true
                        end
                    else
                        healthBar.Visible = false
                    end

                    if espEnabled.Tracer then
                        tracer.From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y)
                        tracer.To = Vector2.new(BottomRight.X, BottomRight.Y)
                        tracer.Visible = true
                    else
                        tracer.Visible = false
                    end

                    if espEnabled.Skeleton then
                        for _, pair in ipairs(bones) do
                            local p1 = plr.Character:FindFirstChild(pair[1])
                            local p2 = plr.Character:FindFirstChild(pair[2])
                            if p1 and p2 then
                                local screenP1, vis1 = Camera:WorldToViewportPoint(p1.Position)
                                local screenP2, vis2 = Camera:WorldToViewportPoint(p2.Position)
                                if vis1 and vis2 then
                                    local boneLine = skeleton[pair[1] .. pair[2]]
                                    boneLine.From = Vector2.new(screenP1.X, screenP1.Y)
                                    boneLine.To = Vector2.new(screenP2.X, screenP2.Y)
                                    boneLine.Visible = true
                                else
                                    skeleton[pair[1] .. pair[2]].Visible = false
                                end
                            end
                        end
                    else
                        for _, line in pairs(skeleton) do
                            line.Visible = false
                        end
                    end
                else
                    Box.Visible = false
                    name.Visible = false
                    distance.Visible = false
                    healthBar.Visible = false
                    tracer.Visible = false
                    for _, line in pairs(skeleton) do
                        line.Visible = false
                    end
                end
            else
                Box.Visible = false
                name.Visible = false
                distance.Visible = false
                healthBar.Visible = false
                tracer.Visible = false
                for _, line in pairs(skeleton) do
                    line.Visible = false
                end
                if not Players:FindFirstChild(plr.Name) then
                    c:Disconnect()
                    espObjects[plr] = nil
                end
            end
        end)
    end
    coroutine.wrap(Update)()
end

for _, plr in pairs(Players:GetPlayers()) do
    if plr ~= player then
        DrawESP(plr)
    end
end

Players.PlayerAdded:Connect(function(plr)
    wait(1)
    if plr ~= player then
        DrawESP(plr)
    end
end)

-- ESP Toggles
local espToggles = {
    {"Box ESP", "Box", 10},
    {"Name", "Name", 50},
    {"Distance", "Distance", 90},
    {"Health Bar", "HealthBar", 130},
    {"Tracer", "Tracer", 170},
    {"Skeleton", "Skeleton", 210},
    {"Team Check", "TeamCheck", 250}
}

for _, toggleData in pairs(espToggles) do
    local toggleName, key, yPos = toggleData[1], toggleData[2], toggleData[3]
    local toggle = Instance.new("TextButton")
    toggle.Size = UDim2.new(0, 200, 0, 30)
    toggle.Position = UDim2.new(0, 10, 0, yPos)
    toggle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    toggle.Text = toggleName .. ": OFF"
    toggle.TextColor3 = Color3.fromRGB(255, 0, 0)
    toggle.TextSize = 14
    toggle.Font = Enum.Font.SourceSans
    toggle.Parent = visualsFrame

    toggle.MouseButton1Click:Connect(function()
        espEnabled[key] = not espEnabled[key]
        if espEnabled[key] then
            toggle.Text = toggleName .. ": ON"
            toggle.TextColor3 = Color3.fromRGB(0, 255, 0)
        else
            toggle.Text = toggleName .. ": OFF"
            toggle.TextColor3 = Color3.fromRGB(255, 0, 0)
        end
    end)
end

-- Fly Script Implementation
local flyEnabled = false
local character = player.Character or player.CharacterAdded:Wait()
local rootPart = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")
local speed = 75
local controlSpeed = 10000

local function toggleFly()
    flyEnabled = not flyEnabled
    if flyEnabled then
        humanoid.PlatformStand = true
        local bv = Instance.new("BodyVelocity")
        bv.Velocity = Vector3.new(0, 0, 0)
        bv.MaxForce = Vector3.new(controlSpeed, controlSpeed, controlSpeed)
        bv.Parent = rootPart

        local bg = Instance.new("BodyGyro")
        bg.MaxTorque = Vector3.new(controlSpeed, controlSpeed, controlSpeed)
        bg.P = 5000
        bg.D = 500
        bg.CFrame = rootPart.CFrame
        bg.Parent = rootPart

        spawn(function()
            while flyEnabled and rootPart and humanoid do
                local cam = workspace.CurrentCamera
                local move = Vector3.new(0, 0, 0)
                if UserInputService:IsKeyDown(Enum.KeyCode.W) then move = move + Vector3.new(0, 0, -1) end
                if UserInputService:IsKeyDown(Enum.KeyCode.S) then move = move + Vector3.new(0, 0, 1) end
                if UserInputService:IsKeyDown(Enum.KeyCode.A) then move = move + Vector3.new(-1, 0, 0) end
                if UserInputService:IsKeyDown(Enum.KeyCode.D) then move = move + Vector3.new(1, 0, 0) end
                if UserInputService:IsKeyDown(Enum.KeyCode.Space) then move = move + Vector3.new(0, 1, 0) end
                if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then move = move + Vector3.new(0, -1, 0) end

                if move.Magnitude > 0 then
                    move = move.Unit * speed
                    bv.Velocity = cam.CFrame:VectorToWorldSpace(move)
                    bg.CFrame = cam.CFrame
                else
                    bv.Velocity = Vector3.new(0, 0, 0)
                end
                wait()
            end
        end)
    else
        humanoid.PlatformStand = false
        if rootPart:FindFirstChild("BodyVelocity") then rootPart.BodyVelocity:Destroy() end
        if rootPart:FindFirstChild("BodyGyro") then rootPart.BodyGyro:Destroy() end
        humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
    end
end

-- Fly Toggle
local flyToggle = Instance.new("TextButton")
flyToggle.Size = UDim2.new(0, 200, 0, 30)
flyToggle.Position = UDim2.new(0, 10, 0, 10)
flyToggle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
flyToggle.Text = "Fly: OFF"
flyToggle.TextColor3 = Color3.fromRGB(255, 0, 0)
flyToggle.TextSize = 14
flyToggle.Font = Enum.Font.SourceSans
flyToggle.Parent = exploitsFrame

flyToggle.MouseButton1Click:Connect(function()
    toggleFly()
    if flyEnabled then
        flyToggle.Text = "Fly: ON"
        flyToggle.TextColor3 = Color3.fromRGB(0, 255, 0)
    else
        flyToggle.Text = "Fly: OFF"
        flyToggle.TextColor3 = Color3.fromRGB(255, 0, 0)
    end
end)

-- GUI Toggle with Q Key
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.Q then
        mainFrame.Visible = not mainFrame.Visible
    end
end)
