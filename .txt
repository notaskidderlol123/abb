-- Services
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Camera = workspace.CurrentCamera
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local rootPart = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

-- GUI Setup
local gui = Instance.new("ScreenGui")
gui.Name = "CustomGUI"
gui.ResetOnSpawn = false
gui.Parent = player:WaitForChild("PlayerGui")

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 400, 0, 350)
mainFrame.Position = UDim2.new(0.5, -200, 0.5, -175)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Visible = true
mainFrame.Parent = gui

local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 30)
titleBar.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
titleBar.Parent = mainFrame

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, 0, 1, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Custom GUI - Press Q to Toggle"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextSize = 14
titleLabel.Font = Enum.Font.SourceSans
titleLabel.Parent = titleBar

-- GUI Toggle
local guiVisible = true
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.Q then
        guiVisible = not guiVisible
        mainFrame.Visible = guiVisible
    end
end)

-- Fly Implementation
local flying = false
local flySpeed = 50
local flyForce = 10000

local function toggleFly()
    flying = not flying
    if flying then
        humanoid.PlatformStand = true
        local bv = Instance.new("BodyVelocity", rootPart)
        bv.Velocity = Vector3.new(0, 0, 0)
        bv.MaxForce = Vector3.new(flyForce, flyForce, flyForce)

        local bg = Instance.new("BodyGyro", rootPart)
        bg.MaxTorque = Vector3.new(flyForce, flyForce, flyForce)
        bg.P = 5000
        bg.D = 500
        bg.CFrame = rootPart.CFrame

        RunService.RenderStepped:Connect(function()
            if not flying then return end
            local move = Vector3.new(0, 0, 0)
            if UserInputService:IsKeyDown(Enum.KeyCode.W) then move = move + Vector3.new(0, 0, -1) end
            if UserInputService:IsKeyDown(Enum.KeyCode.S) then move = move + Vector3.new(0, 0, 1) end
            if UserInputService:IsKeyDown(Enum.KeyCode.A) then move = move + Vector3.new(-1, 0, 0) end
            if UserInputService:IsKeyDown(Enum.KeyCode.D) then move = move + Vector3.new(1, 0, 0) end
            if UserInputService:IsKeyDown(Enum.KeyCode.Space) then move = move + Vector3.new(0, 1, 0) end
            if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then move = move + Vector3.new(0, -1, 0) end

            if move.Magnitude > 0 then
                move = move.Unit * flySpeed
                rootPart.Velocity = Camera.CFrame:VectorToWorldSpace(move)
                bg.CFrame = Camera.CFrame
            else
                rootPart.Velocity = Vector3.new(0, 0, 0)
            end
        end)
    else
        humanoid.PlatformStand = false
        rootPart:FindFirstChild("BodyVelocity"):Destroy()
        rootPart:FindFirstChild("BodyGyro"):Destroy()
        humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
    end
end

local flyToggle = Instance.new("TextButton", mainFrame)
flyToggle.Size = UDim2.new(0, 200, 0, 30)
flyToggle.Position = UDim2.new(0, 10, 0, 10)
flyToggle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
flyToggle.Text = "Fly: OFF"
flyToggle.TextColor3 = Color3.fromRGB(255, 0, 0)
flyToggle.TextSize = 14

flyToggle.MouseButton1Click:Connect(function()
    toggleFly()
    flyToggle.Text = flying and "Fly: ON" or "Fly: OFF"
    flyToggle.TextColor3 = flying and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
end)

-- Infinite Jump
local infiniteJump = false
local infiniteJumpToggle = Instance.new("TextButton", mainFrame)
infiniteJumpToggle.Size = UDim2.new(0, 200, 0, 30)
infiniteJumpToggle.Position = UDim2.new(0, 10, 0, 50)
infiniteJumpToggle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
infiniteJumpToggle.Text = "Infinite Jump: OFF"
infiniteJumpToggle.TextColor3 = Color3.fromRGB(255, 0, 0)
infiniteJumpToggle.TextSize = 14

UserInputService.JumpRequest:Connect(function()
    if infiniteJump then
        humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    end
end)

infiniteJumpToggle.MouseButton1Click:Connect(function()
    infiniteJump = not infiniteJump
    infiniteJumpToggle.Text = infiniteJump and "Infinite Jump: ON" or "Infinite Jump: OFF"
    infiniteJumpToggle.TextColor3 = infiniteJump and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
end)

-- Spinbot
local spinbotEnabled = false
local spinbotToggle = Instance.new("TextButton", mainFrame)
spinbotToggle.Size = UDim2.new(0, 200, 0, 30)
spinbotToggle.Position = UDim2.new(0, 10, 0, 90)
spinbotToggle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
spinbotToggle.Text = "Spinbot: OFF"
spinbotToggle.TextColor3 = Color3.fromRGB(255, 0, 0)
spinbotToggle.TextSize = 14

RunService.RenderStepped:Connect(function()
    if spinbotEnabled then
        rootPart.CFrame = rootPart.CFrame * CFrame.Angles(0, math.rad(25), 0)
    end
end)

spinbotToggle.MouseButton1Click:Connect(function()
    spinbotEnabled = not spinbotEnabled
    spinbotToggle.Text = spinbotEnabled and "Spinbot: ON" or "Spinbot: OFF"
    spinbotToggle.TextColor3 = spinbotEnabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
end)

print("Fully optimized GUI loaded with all features!")
