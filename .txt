-- Define LocalPlayer
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Services for aimbot functionality
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera

-- Aimbot variables
local player = LocalPlayer
local isAimbotEnabled = false
local targetPlayer = nil

-- Aimbot logic
local function getNearestPlayer()
    local nearestDistance = math.huge
    local nearestPlayer = nil

    for _, otherPlayer in pairs(Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (player.Character.HumanoidRootPart.Position - otherPlayer.Character.HumanoidRootPart.Position).Magnitude
            if distance < nearestDistance then
                nearestDistance = distance
                nearestPlayer = otherPlayer
            end
        end
    end

    return nearestPlayer
end

local function toggleAimbot(state)
    if state then
        RunService:BindToRenderStep("LockOnPlayer", Enum.RenderPriority.Camera.Value + 1, function()
            if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                Camera.CFrame = CFrame.new(Camera.CFrame.Position, targetPlayer.Character.HumanoidRootPart.Position)
            end
        end)
        local inputBeganConnection
        local inputEndedConnection
        inputBeganConnection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
            if input.UserInputType == Enum.UserInputType.MouseButton2 and not gameProcessed then
                targetPlayer = getNearestPlayer()
            end
        end)
        inputEndedConnection = UserInputService.InputEnded:Connect(function(input, gameProcessed)
            if input.UserInputType == Enum.UserInputType.MouseButton2 and not gameProcessed then
                targetPlayer = nil
            end
        end)
        -- Store connections to disconnect later
        toggleAimbot.connections = {inputBeganConnection, inputEndedConnection}
    else
        RunService:UnbindFromRenderStep("LockOnPlayer")
        if toggleAimbot.connections then
            for _, connection in pairs(toggleAimbot.connections) do
                connection:Disconnect()
            end
            toggleAimbot.connections = nil
        end
        targetPlayer = nil
    end
end

-- Create the ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "ExternalMenu"
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false

-- Create the main frame
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 300, 0, 200)
MainFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui

-- Create the top bar (title bar)
local TopBar = Instance.new("Frame")
TopBar.Size = UDim2.new(1, 0, 0, 30)
TopBar.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
TopBar.BorderSizePixel = 0
TopBar.Parent = MainFrame

-- Title label
local TitleLabel = Instance.new("TextLabel")
TitleLabel.Size = UDim2.new(1, -40, 1, 0)
TitleLabel.Position = UDim2.new(0, 10, 0, 0)
TitleLabel.BackgroundTransparency = 1
TitleLabel.Text = "External Menu Example"
TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleLabel.TextSize = 16
TitleLabel.Font = Enum.Font.SourceSansBold
TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
TitleLabel.Parent = TopBar

-- Close button (X)
local CloseButton = Instance.new("TextButton")
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Position = UDim2.new(1, -30, 0, 0)
CloseButton.BackgroundTransparency = 1
CloseButton.Text = "X"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextSize = 16
CloseButton.Font = Enum.Font.SourceSansBold
CloseButton.Parent = TopBar

-- Create the tab bar (left side)
local TabBar = Instance.new("Frame")
TabBar.Size = UDim2.new(0, 100, 1, -30)
TabBar.Position = UDim2.new(0, 0, 0, 30)
TabBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
TabBar.BorderSizePixel = 0
TabBar.Parent = MainFrame

-- Tab buttons
local function createTabButton(name, position, targetFrame)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, 0, 0, 40)
    button.Position = position
    button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    button.BorderSizePixel = 0
    button.Text = name
    button.TextColor3 = Color3.fromRGB(200, 200, 200)
    button.TextSize = 16
    button.Font = Enum.Font.SourceSans
    button.Parent = TabBar

    -- Show/hide frame on click
    button.MouseButton1Click:Connect(function()
        for _, child in pairs(MainFrame:GetChildren()) do
            if child:IsA("Frame") and child.Name:find("TabContent") then
                child.Visible = false
            end
        end
        targetFrame.Visible = true
    end)
end

-- Content area with ScrollingFrame
local function createTabContent(name)
    local contentFrame = Instance.new("Frame")
    contentFrame.Name = name .. "TabContent"
    contentFrame.Size = UDim2.new(0, 200, 1, -30)
    contentFrame.Position = UDim2.new(0, 100, 0, 30)
    contentFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    contentFrame.BorderSizePixel = 0
    contentFrame.Visible = false
    contentFrame.Parent = MainFrame

    -- Add ScrollingFrame
    local scrollingFrame = Instance.new("ScrollingFrame")
    scrollingFrame.Size = UDim2.new(1, -10, 1, -10)
    scrollingFrame.Position = UDim2.new(0, 5, 0, 5)
    scrollingFrame.BackgroundTransparency = 1
    scrollingFrame.ScrollBarThickness = 8
    scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
    scrollingFrame.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 100)
    scrollingFrame.Parent = contentFrame

    local uiListLayout = Instance.new("UIListLayout")
    uiListLayout.Padding = UDim.new(0, 5)
    uiListLayout.Parent = scrollingFrame

    return scrollingFrame
end

-- Create tabs and content
local aimbotTab = createTabContent("Aimbot")
local visualsTab = createTabContent("Visuals")
local exploitsTab = createTabContent("Exploits")

-- Create tab buttons
createTabButton("Aimbot", UDim2.new(0, 0, 0, 0), aimbotTab.Parent)
createTabButton("Visuals", UDim2.new(0, 0, 0, 40), visualsTab.Parent)
createTabButton("Extras", UDim2.new(0, 0, 0, 80), exploitsTab.Parent)

-- Make the first tab visible by default
aimbotTab.Parent.Visible = true

-- Add toggle button for Aimbot
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(1, -10, 0, 30)
toggleButton.Position = UDim2.new(0, 5, 0, 5)
toggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
toggleButton.BorderSizePixel = 0
toggleButton.Text = "Toggle Aimbot (Off)"
toggleButton.TextColor3 = Color3.fromRGB(200, 200, 200)
toggleButton.TextSize = 14
toggleButton.Font = Enum.Font.SourceSans
toggleButton.Parent = aimbotTab

toggleButton.MouseButton1Click:Connect(function()
    isAimbotEnabled = not isAimbotEnabled
    toggleButton.Text = "Toggle Aimbot (" .. (isAimbotEnabled and "On" or "Off") .. ")"
    toggleAimbot(isAimbotEnabled)
end)

-- Update CanvasSize of ScrollingFrame for Aimbot tab
aimbotTab.CanvasSize = UDim2.new(0, 0, 0, toggleButton.Size.Y.Offset + 10)

-- Add "Made By" link as a TextButton (clickable)
local MadeByButton = Instance.new("TextButton")
MadeByButton.Size = UDim2.new(0, 200, 0, 20)
MadeByButton.Position = UDim2.new(0, 100, 1, -20)
MadeByButton.BackgroundTransparency = 1
MadeByButton.Text = "https://discord.gg/vSt4E2KcKC"
MadeByButton.TextColor3 = Color3.fromRGB(0, 120, 215) -- Blue color for link
MadeByButton.TextSize = 12
MadeByButton.Font = Enum.Font.SourceSans
MadeByButton.Parent = MainFrame

-- Make the link clickable (open in browser)
MadeByButton.MouseButton1Click:Connect(function()
    -- Executors typically support request functions; this may vary by executor
    local success, err = pcall(function()
        local HttpService = game:GetService("HttpService")
        HttpService:GetAsync("https://discord.gg/vSt4E2KcKC", true)
    end)
    if not success then
        warn("Failed to open Discord link: " .. tostring(err))
    end
end)

-- Close button functionality
CloseButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)
